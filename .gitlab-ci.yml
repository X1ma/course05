# Godot 4.3 image
#image: barichello/godot-ci:latest

# Godot 4.3 image with C/C++ support and precompiled bindings
image: ladnikj/godot-cpp-ci:latest

# Cache all modified files between runs
cache:
  key: "compiled-bindings"
  untracked: true
  when: 'always'

stages:
  - import
  - export
  - test
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PROJECT_PATH: project
  EXPORT_NAME: export
  # [editor, template_debug, template_release]
  TEMPLATE: template_debug

before_script:
    - export SCONS_CACHE="./cache"
    - source gitlab_functions.sh


    
import-assets:
  stage: import
  script:
    #- cd $PROJECT_PATH
    #- godot --headless --verbose --editor --quit
    #- cd ..
    - scons -v

  needs: []

# Compile bindings, build custom libraries and export to platforms  
linux:
  stage: export
  variables:
    EXPORT_PATH: build/$CI_JOB_NAME
  script:
    - section_start "SCONS_COMPILE_LIBS" "Build C++ libraries"
    - scons platform=linux target=$TEMPLATE
    - section_end "SCONS_COMPILE_LIBS"

    - cd $PROJECT_PATH
    - mkdir -v -p $EXPORT_PATH

    - section_start "GODOT_EXPORT" "Export Godot project with $TEMPLATE"
    - export_godot "Linux/X11" $EXPORT_PATH/$EXPORT_NAME.x86_64
    - section_end "GODOT_EXPORT"
  needs: ["import-assets"]
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - $PROJECT_PATH/$EXPORT_PATH/*

windows:
  stage: export
  variables:
    EXPORT_PATH: build/$CI_JOB_NAME
  script:
    - section_start "SCONS_COMPILE_LIBS" "Compile C++ libraries"
    - scons platform=windows target=$TEMPLATE
    - section_end "SCONS_COMPILE_LIBS" 

    - cd $PROJECT_PATH
    - mkdir -v -p $EXPORT_PATH

    - section_start "GODOT_EXPORT" "Export Godot project with $TEMPLATE"
    - export_godot "Windows Desktop" $EXPORT_PATH/$EXPORT_NAME.exe
    - section_end "GODOT_EXPORT"
  needs: ["import-assets"]
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - $PROJECT_PATH/$EXPORT_PATH/*

# Would fail for Godot4.2 Mono
web:
  stage: export
  variables:
    EXPORT_PATH: build/$CI_JOB_NAME
  script:
    - section_start "SCONS_COMPILE_LIBS" "Compile C++ libraries"
    - scons platform=web target=$TEMPLATE
    - section_end "SCONS_COMPILE_LIBS" 

    - cd $PROJECT_PATH
    - mkdir -v -p $EXPORT_PATH

    - section_start "GODOT_EXPORT" "Export Godot project with $TEMPLATE"
    - export_godot "Web" $EXPORT_PATH/$index.html
    - section_end "GODOT_EXPORT"
  needs: ["import-assets"]
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAMEl
    paths:
      - $PROJECT_PATH/$EXPORT_PATH/*

unit_tests:
  stage: test
  variables:
    TEST_SCRIPT: addons/gut/gut_cmdln.gd
    TEST_PATH: test/unit
    REPORT_PATH: reports
  script:
    - cd $PROJECT_PATH
    - mkdir -v -p $TEST_PATH
    - mkdir -v -p $REPORT_PATH
    - godot --headless -s $TEST_SCRIPT -gdir=$TEST_PATH 
  needs: ["linux"]
  artifacts:
    name: report_$CI_JOB_NAME
    when: 'always'
    paths:
      - $PROJECT_PATH/$REPORT_PATH/*
    

integration_tests:
  stage: test
  variables:
    TEST_SCRIPT: addons/gut/gut_cmdln.gd
    TEST_PATH: test/integration
    REPORT_PATH: reports
  script:
    - cd $PROJECT_PATH
    - mkdir -v -p $TEST_PATH
    - mkdir -v -p $REPORT_PATH
    - godot --headless -s $TEST_SCRIPT -gdir=$TEST_PATH 
  needs: ["linux"]
  artifacts:
    name: report_$CI_JOB_NAME
    when: 'always'
    paths:
      - $PROJECT_PATH/$REPORT_PATH/*